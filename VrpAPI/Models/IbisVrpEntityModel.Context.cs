//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VrpAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IBISVRPEntities : DbContext
    {
        public IBISVRPEntities()
            : base("name=IBISVRPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<BANQUE_VRP> BANQUE_VRP { get; set; }
        public virtual DbSet<ETS_BANCAIRE> ETS_BANCAIRE { get; set; }
        public virtual DbSet<ORGAN_ETS_BANCAIRE> ORGAN_ETS_BANCAIRE { get; set; }
        public virtual DbSet<ORGANIGRAMME> ORGANIGRAMMEs { get; set; }
        public virtual DbSet<PAYS_NATIONAL> PAYS_NATIONAL { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TYPE_RELATION_VRP> TYPE_RELATION_VRP { get; set; }
        public virtual DbSet<VRP_RELATION_ETS> VRP_RELATION_ETS { get; set; }
        public virtual DbSet<tmp_vrprelationets> tmp_vrprelationets { get; set; }
    
        public virtual ObjectResult<JoinTables_Result> JoinTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JoinTables_Result>("JoinTables");
        }
    
        public virtual ObjectResult<LsBanqParPays_Result> LsBanqParPays(string paysCode)
        {
            var paysCodeParameter = paysCode != null ?
                new ObjectParameter("PaysCode", paysCode) :
                new ObjectParameter("PaysCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LsBanqParPays_Result>("LsBanqParPays", paysCodeParameter);
        }
    
        public virtual ObjectResult<LsPaysVrpInt_Result> LsPaysVrpInt(string banqueCode, string paysCode)
        {
            var banqueCodeParameter = banqueCode != null ?
                new ObjectParameter("BanqueCode", banqueCode) :
                new ObjectParameter("BanqueCode", typeof(string));
    
            var paysCodeParameter = paysCode != null ?
                new ObjectParameter("PaysCode", paysCode) :
                new ObjectParameter("PaysCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LsPaysVrpInt_Result>("LsPaysVrpInt", banqueCodeParameter, paysCodeParameter);
        }
    
        public virtual ObjectResult<RelationVrp_Result> RelationVrp(string codeVrp, string banqueCodeBceao)
        {
            var codeVrpParameter = codeVrp != null ?
                new ObjectParameter("CodeVrp", codeVrp) :
                new ObjectParameter("CodeVrp", typeof(string));
    
            var banqueCodeBceaoParameter = banqueCodeBceao != null ?
                new ObjectParameter("BanqueCodeBceao", banqueCodeBceao) :
                new ObjectParameter("BanqueCodeBceao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RelationVrp_Result>("RelationVrp", codeVrpParameter, banqueCodeBceaoParameter);
        }
    
        public virtual ObjectResult<VrpintervBank_Result> VrpintervBank(string codeVrp)
        {
            var codeVrpParameter = codeVrp != null ?
                new ObjectParameter("CodeVrp", codeVrp) :
                new ObjectParameter("CodeVrp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VrpintervBank_Result>("VrpintervBank", codeVrpParameter);
        }
    }
}
